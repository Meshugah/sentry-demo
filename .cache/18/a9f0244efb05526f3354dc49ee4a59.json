{"id":"../node_modules/@sentry/types/esm/transaction.js","dependencies":[{"name":"/Users/vigneshkarthikeyan/Work/sentry-demo/node_modules/@sentry/types/esm/transaction.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/vigneshkarthikeyan/Work/sentry-demo/package.json","includedInParent":true,"mtime":1616973881073},{"name":"/Users/vigneshkarthikeyan/Work/sentry-demo/node_modules/@sentry/types/package.json","includedInParent":true,"mtime":1616742963718}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionSamplingMethod = void 0;\nvar TransactionSamplingMethod;\nexports.TransactionSamplingMethod = TransactionSamplingMethod;\n\n(function (TransactionSamplingMethod) {\n  TransactionSamplingMethod[\"Explicit\"] = \"explicitly_set\";\n  TransactionSamplingMethod[\"Sampler\"] = \"client_sampler\";\n  TransactionSamplingMethod[\"Rate\"] = \"client_rate\";\n  TransactionSamplingMethod[\"Inheritance\"] = \"inheritance\";\n})(TransactionSamplingMethod || (exports.TransactionSamplingMethod = TransactionSamplingMethod = {}));"},"sourceMaps":{"js":{"mappings":[{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":7,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":12},"generated":{"line":7,"column":4}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":7,"column":29}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":10,"column":1}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":12},"generated":{"line":10,"column":11}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":10,"column":36}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":10,"column":38}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":2}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":27}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":28}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":38}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":39}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":42}},{"source":"../src/transaction.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":11,"column":58}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":2}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":27}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":28}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":37}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":38}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":41}},{"source":"../src/transaction.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":12,"column":57}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":2}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":27}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":28}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":34}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":35}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":38}},{"source":"../src/transaction.ts","name":null,"original":{"line":113,"column":2},"generated":{"line":13,"column":51}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":2}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":27}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":28}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":41}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":42}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":45}},{"source":"../src/transaction.ts","name":null,"original":{"line":114,"column":2},"generated":{"line":14,"column":58}},{"source":"../src/transaction.ts","name":null,"original":{"line":115,"column":1},"generated":{"line":15,"column":0}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":15,"column":1}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":12},"generated":{"line":15,"column":3}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":15,"column":28}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":12},"generated":{"line":15,"column":69}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":15,"column":94}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":15,"column":97}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":37},"generated":{"line":15,"column":99}},{"source":"../src/transaction.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":15,"column":100}}],"sources":{"../src/transaction.ts":"import { ExtractedNodeRequestData, Primitive, WorkerLocation } from './misc';\nimport { Span, SpanContext } from './span';\n\n/**\n * Interface holding Transaction-specific properties\n */\nexport interface TransactionContext extends SpanContext {\n  /**\n   * Human-readable identifier for the transaction\n   */\n  name: string;\n\n  /**\n   * If true, sets the end timestamp of the transaction to the highest timestamp of child spans, trimming\n   * the duration of the transaction. This is useful to discard extra time in the transaction that is not\n   * accounted for in child spans, like what happens in the idle transaction Tracing integration, where we finish the\n   * transaction after a given \"idle time\" and we don't want this \"idle time\" to be part of the transaction.\n   */\n  trimEnd?: boolean;\n\n  /**\n   * If this transaction has a parent, the parent's sampling decision\n   */\n  parentSampled?: boolean;\n}\n\n/**\n * Data pulled from a `sentry-trace` header\n */\nexport type TraceparentData = Pick<TransactionContext, 'traceId' | 'parentSpanId' | 'parentSampled'>;\n\n/**\n * Transaction \"Class\", inherits Span only has `setName`\n */\nexport interface Transaction extends TransactionContext, Span {\n  /**\n   * @inheritDoc\n   */\n  spanId: string;\n\n  /**\n   * @inheritDoc\n   */\n  traceId: string;\n\n  /**\n   * @inheritDoc\n   */\n  startTimestamp: number;\n\n  /**\n   * @inheritDoc\n   */\n  tags: { [key: string]: Primitive };\n\n  /**\n   * @inheritDoc\n   */\n  data: { [key: string]: any };\n\n  /**\n   * Set the name of the transaction\n   */\n  setName(name: string): void;\n\n  /** Returns the current transaction properties as a `TransactionContext` */\n  toContext(): TransactionContext;\n\n  /** Updates the current transaction with a new `TransactionContext` */\n  updateWithContext(transactionContext: TransactionContext): this;\n}\n\n/**\n * Context data passed by the user when starting a transaction, to be used by the tracesSampler method.\n */\nexport interface CustomSamplingContext {\n  [key: string]: any;\n}\n\n/**\n * Data passed to the `tracesSampler` function, which forms the basis for whatever decisions it might make.\n *\n * Adds default data to data provided by the user. See {@link Hub.startTransaction}\n */\nexport interface SamplingContext extends CustomSamplingContext {\n  /**\n   * Context data with which transaction being sampled was created\n   */\n  transactionContext: TransactionContext;\n\n  /**\n   * Sampling decision from the parent transaction, if any.\n   */\n  parentSampled?: boolean;\n\n  /**\n   * Object representing the URL of the current page or worker script. Passed by default when using the `BrowserTracing`\n   * integration.\n   */\n  location?: WorkerLocation;\n\n  /**\n   * Object representing the incoming request to a node server. Passed by default when using the TracingHandler.\n   */\n  request?: ExtractedNodeRequestData;\n}\n\nexport type Measurements = Record<string, { value: number }>;\n\nexport enum TransactionSamplingMethod {\n  Explicit = 'explicitly_set',\n  Sampler = 'client_sampler',\n  Rate = 'client_rate',\n  Inheritance = 'inheritance',\n}\n"},"lineCount":null}},"error":null,"hash":"99ea15cb45022abfdca701d365d94bb6","cacheData":{"env":{}}}